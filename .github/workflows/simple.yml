name: build

on:
  push:
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        emacs_version:
          - '26.1'
          - '26.2'
          - '26.3'
          - snapshot

    steps:
      - name: set environment variables
        uses: allenevans/set-env@v1.0.0
        with:
          LLVM_VERSION: '6.0'
          RTAGS_VERSION: '2.37'

      - name: Add LLVM repository
        run: |
          wget -q -O llvm-snapshot.gpg.key https://apt.llvm.org/llvm-snapshot.gpg.key
          sudo apt-key add llvm-snapshot.gpg.key
          sudo apt-add-repository \
            "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-$LLVM_VERSION main"
          sudo apt-get update --quiet --yes

      - name: Setup Prerequisites
        run: |
          sudo apt-get install snapd
          sudo snap install ripgrep --classic

          sudo apt install --no-install-recommends -q -y \
            global \
            pandoc \
            exuberant-ctags \
            sbcl \
            "clang-${LLVM_VERSION}" \
            "llvm-${LLVM_VERSION}" \
            "libclang-${LLVM_VERSION}-dev" \
            cmake \
            pkg-config

          echo "::set-env name=CC::clang-${LLVM_VERSION}"
          echo "::set-env name=CXX::clang++-${LLVM_VERSION}"

      - name: Set RTags Cache key
        id: rtags-cache
        run: |
          echo "::set-output name=key::${{ runner.os }}-rtags-v$RTAGS_VERSION"

      - name: Get RTags cache
        uses: actions/cache@v1
        with:
          path: ~/rtags
          key: ${{ steps.rtags-cache.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-rtags-

      - name: Download, build and install RTags
        run:  |
          if [ ! -f ~/rtags/LICENSE.txt ]; then
            rm -rf ~/rtgas
            git clone \
              -b "v$RTAGS_VERSION" \
              --recursive https://github.com/Andersbakken/rtags.git \
              ~/rtags
          fi

          $CXX --version
          cmake --version

          cd ~/rtags

          cmake \
            -S . \
            -Bbuild \
            -DCMAKE_BUILD_TYPE=Release

          cmake --build build -j 2
          cmake --build build --target install

      - name: Start the RTags daemon
        run: rdm &

      - uses: actions/checkout@v2-beta
        with:
          fetch-depth: 1

      - uses: purcell/setup-emacs@master
        with:
          version: ${{ matrix.emacs_version }}

      - name: Run tests
        run: ln -s $GITHUB_WORKSPACE $HOME/.emacs.d && ./run-tests.sh --debug

      - name: Run Shell Check
        if: always()
        run: shellcheck ./run-tests.sh
